---
apiVersion: v1
kind: Secret
metadata:
  name: superset-env-secret
type: Opaque
stringData:
  SUPERSET_SECRET_KEY: "this_is_a_strong_secret_key"
  SUPERSET_ADMIN_USER: "admin"
  SUPERSET_ADMIN_PASS: "adminpass"
  SUPERSET_ADMIN_EMAIL: "rapeti.poornachandra@varaisys.com"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: superset-config
data:
  superset_config.py: |
    from cachelib.redis import RedisCache

    SQLALCHEMY_DATABASE_URI = "mysql+mysqldb://supersetuser:superpass@mysql:3306/supersetdb"
    RATELIMIT_STORAGE_URI = "redis://redis:6379/0"

    CACHE_CONFIG = {
        'CACHE_TYPE': 'RedisCache',
        'CACHE_DEFAULT_TIMEOUT': 300,
        'CACHE_KEY_PREFIX': 'superset_',
        'CACHE_REDIS_URL': 'redis://redis:6379/0',
    }

    MY_CUSTOM_COLORS = [
       "#F2A900",
       "#001E60",
       "#C8C7C9",
    ]

    COLOR_SCHEMES = [
       {
           "id": "my_custom_palette",
           "label": "ðŸŒˆ My Custom Palette",
           "colors": MY_CUSTOM_COLORS,
       },
    ]
    EXTRA_CATEGORICAL_COLOR_SCHEMES = COLOR_SCHEMES
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: superset
spec:
  serviceName: "superset"
  replicas: 1
  selector:
    matchLabels:
      app: superset
  template:
    metadata:
      labels:
        app: superset
    spec:
      imagePullSecrets:
        - name: ecr-secret
      containers:
        - name: superset
          image: 339712944453.dkr.ecr.us-east-1.amazonaws.com/udh/superset-app:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8088
          env:
            - name: SUPERSET_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: superset-env-secret
                  key: SUPERSET_SECRET_KEY
            - name: ADMIN_USERNAME
              valueFrom:
                secretKeyRef:
                  name: superset-env-secret
                  key: SUPERSET_ADMIN_USER
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: superset-env-secret
                  key: SUPERSET_ADMIN_PASS
            - name: ADMIN_EMAIL
              valueFrom:
                secretKeyRef:
                  name: superset-env-secret
                  key: SUPERSET_ADMIN_EMAIL
            - name: ADMIN_FIRSTNAME
              value: Super
            - name: ADMIN_LASTNAME
              value: Set
            - name: PYTHONPATH
              value: /app/pythonpath
            - name: REDIS_HOST
              value: redis
            - name: REDIS_PORT
              value: "6379"
            - name: CELERY_BROKER_URL
              value: redis://redis:6379/0
            - name: CELERY_RESULT_BACKEND
              value: redis://redis:6379/0
          command: ["/bin/sh", "-c"]
          args:
            - |
              superset db upgrade &&
              superset fab create-admin \
                --username $ADMIN_USERNAME \
                --firstname $ADMIN_FIRSTNAME \
                --lastname $ADMIN_LASTNAME \
                --email $ADMIN_EMAIL \
                --password $ADMIN_PASSWORD &&
              superset init &&
              superset run -h 0.0.0.0 -p 8088
          volumeMounts:
            - name: superset-data
              mountPath: /app/superset_home
            - name: superset-config
              mountPath: /app/pythonpath/superset_config.py
              subPath: superset_config.py
          resources:
            requests:
              memory: "2Gi"
              cpu: "1"
            limits:
              memory: "4Gi"
              cpu: "2"
      volumes:
        - name: superset-config
          configMap:
            name: superset-config
  volumeClaimTemplates:
    - metadata:
        name: superset-data
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: longhorn
        resources:
          requests:
            storage: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: superset-worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: superset-worker
  template:
    metadata:
      labels:
        app: superset-worker
    spec:
      imagePullSecrets:
        - name: ecr-secret
      containers:
        - name: superset-worker
          image: 339712944453.dkr.ecr.us-east-1.amazonaws.com/udh/superset-worker:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: CELERY_BROKER_URL
              value: redis://redis:6379/0
            - name: CELERY_RESULT_BACKEND
              value: redis://redis:6379/0
          volumeMounts:
            - name: superset-config
              mountPath: /app/pythonpath/superset_config.py
              subPath: superset_config.py
      volumes:
        - name: superset-config
          configMap:
            name: superset-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: superset-worker-beat
spec:
  replicas: 1
  selector:
    matchLabels:
      app: superset-worker-beat
  template:
    metadata:
      labels:
        app: superset-worker-beat
    spec:
      imagePullSecrets:
        - name: ecr-secret
      containers:
        - name: superset-worker-beat
          image: 339712944453.dkr.ecr.us-east-1.amazonaws.com/udh/superset-worker-beat:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: CELERY_BROKER_URL
              value: redis://redis:6379/0
            - name: CELERY_RESULT_BACKEND
              value: redis://redis:6379/0
          volumeMounts:
            - name: superset-config
              mountPath: /app/pythonpath/superset_config.py
              subPath: superset_config.py
      volumes:
        - name: superset-config
          configMap:
            name: superset-config
---
apiVersion: v1
kind: Service
metadata:
  name: superset
spec:
  type: NodePort
  selector:
    app: superset
  ports:
    - name: http
      port: 8088
      targetPort: 8088
      nodePort: 30121

